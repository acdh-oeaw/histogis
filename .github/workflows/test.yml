name: Test
on: 
  push:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false
jobs:
  test:
    name: Test Application
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: github_actions
      DB_NAME: github_actions
    services:
      postgres:
        image: postgis/postgis:12-master
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - uses: actions/cache@v4
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
    - name: GDAL
      run: sudo apt-get install postgresql-common libpq-dev python3-gdal
    - name: Install dependencies
      run: |
        pip install --upgrade --upgrade-strategy eager -r requirements.txt
    - name: Run tests
      run: coverage run manage.py test -v 2
    - name: create report
      run: coverage html
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './htmlcov'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4